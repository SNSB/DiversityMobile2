{"version":3,"file":"index.js","sourceRoot":"","sources":["index.tsx"],"names":["DiversityMobile2","DiversityMobile2.Application","DiversityMobile2.Application.initialize","DiversityMobile2.Application.getAccessToken","DiversityMobile2.Application.onLoginClick","DiversityMobile2.Application.onLogin","DiversityMobile2.Application.onDeviceReady","DiversityMobile2.Application.onPause","DiversityMobile2.Application.onResume"],"mappings":"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","sourcesContent":["// For an introduction to the Blank template, see the following documentation:\r\n// http://go.microsoft.com/fwlink/?LinkID=397705\r\n// To debug code on page load in Ripple or on Android devices/emulators: launch your app, set breakpoints, \r\n// and then run \"window.location.reload()\" in the JavaScript Console.\r\n\r\n/// <reference path=\"typings/cordova/plugins/InAppBrowser.d.ts\"/>\r\n\r\n\r\nimport React = require('react');\r\nimport ReactDOM = require('react-dom');\r\nimport hello = require('hellojs'); \r\nimport rest = require('rest');\r\nimport mime = require('rest/interceptor/mime');\r\nimport interceptor = require('rest/interceptor');\r\nimport when = require('when');\r\n \r\nmodule DiversityMobile2 {\r\n    \"use strict\";\r\n    var api_server = \"https://diversityapi.azurewebsites.net\"\r\n    var api_base = api_server + \"/api\";\r\n    var ext_logins = api_base + \"/account/ExternalLogins?returnUrl=%2F&generateState=true\";\r\n    var ext_register = api_base + \"/account/\";\r\n\r\n    export module Application {\r\n        var Token = \"\";\r\n\r\n        export function initialize() {\r\n            document.addEventListener('deviceready', onDeviceReady, false);  \r\n        }\r\n\r\n        function getAccessToken(url) {\r\n            var prefix = \"#access_token=\";\r\n            var regex = new RegExp(prefix + \"([^&#]+)\"),\r\n                results = regex.exec(url);\r\n            return results === null ? \"\" : results[0].replace(prefix, \"\");\r\n        }\r\n  \r\n        function onLoginClick() {\r\n            //hello('windows').login();\r\n            var client = rest\r\n                .wrap(mime);\r\n\r\n            client(ext_logins).then(function (response) {\r\n                var entity = response.entity[0];\r\n                var uri = api_server + entity.Url;\r\n\r\n                var browser = window.open(uri, \"_blank\", \"location=yes\");\r\n\r\n                browser.addEventListener(\"loadstart\", (event) => {\r\n                    console.log(event);                   \r\n\r\n                    var token = getAccessToken(event.url);\r\n                    if (token !== \"\") {\r\n                        Token = token;\r\n\r\n                        \r\n                        browser.close();\r\n                    }\r\n                });\r\n\r\n                browser.addEventListener(\"loaderror\", (event) => {\r\n                    console.log(event);\r\n                });\r\n            });\r\n        } \r\n\r\n        function onLogin(auth: HelloJSEventArgument) {\r\n            // Call user information, for the given network\r\n            hello(auth.network).api('/me').then(function (r) {\r\n                // Inject it into the container\r\n                var label = document.getElementById('profile_' + auth.network);\r\n                if (!label) {\r\n                    label = document.createElement('div');\r\n                    label.id = 'profile_' + auth.network;\r\n                    document.getElementById('profile').appendChild(label);\r\n                }\r\n                label.innerHTML = '<img src=\"' + r.thumbnail + '\" /> Hey ' + r.name;\r\n            });\r\n\r\n            var session = hello(auth.network).getAuthResponse();\r\n\r\n            \r\n        }\r\n\r\n        function onDeviceReady() {\r\n            // Handle the Cordova pause and resume events \r\n            document.addEventListener('pause', onPause, false);\r\n            document.addEventListener('resume', onResume, false); \r\n\r\n            /*hello.init({\r\n                windows: '000000004C0FE46A'\r\n            }, { redirect_uri: 'https://diversityapi.azurewebsites.net/redirect.html' });*/\r\n\r\n            //hello.on('auth.login', onLogin);\r\n            \r\n            // TODO: Cordova has been loaded. Perform any initialization that requires Cordova here.\r\n\r\n            var button = ReactDOM.render(\r\n                <button onClick={onLoginClick} > Windows Hello</button>,\r\n                document.getElementById('example') \r\n            );\r\n        }\r\n\r\n        function onPause() {\r\n            // TODO: This application has been suspended. Save application state here.\r\n        }\r\n\r\n        function onResume() {\r\n            // TODO: This application has been reactivated. Restore application state here.\r\n        }\r\n\r\n    }\r\n\r\n    window.onload = function () {\r\n        Application.initialize();\r\n    }\r\n}\r\n"]}